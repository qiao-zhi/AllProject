<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.jwxt.mapper.arrangeCourse.CoursearrangementbaseinfoMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.jwxt.bean.arrangeCourse.Coursearrangementbaseinfo" >
    <id column="arrangeBaseInfoId" property="arrangebaseinfoid" jdbcType="VARCHAR" />
    <result column="arrangePersonName" property="arrangepersonname" jdbcType="VARCHAR" />
    <result column="courseArrangeTime" property="coursearrangetime" jdbcType="TIMESTAMP" />
    <result column="courseArrangeName" property="coursearrangename" jdbcType="VARCHAR" />
    <result column="yearNum" property="yearnum" jdbcType="VARCHAR" />
    <result column="semester" property="semester" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    arrangeBaseInfoId, arrangePersonName, courseArrangeTime, courseArrangeName, yearNum, 
    semester, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.jwxt.bean.arrangeCourse.CoursearrangementbaseinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coursearrangementbaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from coursearrangementbaseinfo
    where arrangeBaseInfoId = #{arrangebaseinfoid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from coursearrangementbaseinfo
    where arrangeBaseInfoId = #{arrangebaseinfoid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.jwxt.bean.arrangeCourse.CoursearrangementbaseinfoExample" >
    delete from coursearrangementbaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.jwxt.bean.arrangeCourse.Coursearrangementbaseinfo" >
    insert into coursearrangementbaseinfo (arrangeBaseInfoId, arrangePersonName, 
      courseArrangeTime, courseArrangeName, 
      yearNum, semester, status
      )
    values (#{arrangebaseinfoid,jdbcType=VARCHAR}, #{arrangepersonname,jdbcType=VARCHAR}, 
      #{coursearrangetime,jdbcType=TIMESTAMP}, #{coursearrangename,jdbcType=VARCHAR}, 
      #{yearnum,jdbcType=VARCHAR}, #{semester,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.jwxt.bean.arrangeCourse.Coursearrangementbaseinfo" >
    insert into coursearrangementbaseinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="arrangebaseinfoid != null" >
        arrangeBaseInfoId,
      </if>
      <if test="arrangepersonname != null" >
        arrangePersonName,
      </if>
      <if test="coursearrangetime != null" >
        courseArrangeTime,
      </if>
      <if test="coursearrangename != null" >
        courseArrangeName,
      </if>
      <if test="yearnum != null" >
        yearNum,
      </if>
      <if test="semester != null" >
        semester,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="arrangebaseinfoid != null" >
        #{arrangebaseinfoid,jdbcType=VARCHAR},
      </if>
      <if test="arrangepersonname != null" >
        #{arrangepersonname,jdbcType=VARCHAR},
      </if>
      <if test="coursearrangetime != null" >
        #{coursearrangetime,jdbcType=TIMESTAMP},
      </if>
      <if test="coursearrangename != null" >
        #{coursearrangename,jdbcType=VARCHAR},
      </if>
      <if test="yearnum != null" >
        #{yearnum,jdbcType=VARCHAR},
      </if>
      <if test="semester != null" >
        #{semester,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.jwxt.bean.arrangeCourse.CoursearrangementbaseinfoExample" resultType="java.lang.Integer" >
    select count(*) from coursearrangementbaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coursearrangementbaseinfo
    <set >
      <if test="record.arrangebaseinfoid != null" >
        arrangeBaseInfoId = #{record.arrangebaseinfoid,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangepersonname != null" >
        arrangePersonName = #{record.arrangepersonname,jdbcType=VARCHAR},
      </if>
      <if test="record.coursearrangetime != null" >
        courseArrangeTime = #{record.coursearrangetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coursearrangename != null" >
        courseArrangeName = #{record.coursearrangename,jdbcType=VARCHAR},
      </if>
      <if test="record.yearnum != null" >
        yearNum = #{record.yearnum,jdbcType=VARCHAR},
      </if>
      <if test="record.semester != null" >
        semester = #{record.semester,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coursearrangementbaseinfo
    set arrangeBaseInfoId = #{record.arrangebaseinfoid,jdbcType=VARCHAR},
      arrangePersonName = #{record.arrangepersonname,jdbcType=VARCHAR},
      courseArrangeTime = #{record.coursearrangetime,jdbcType=TIMESTAMP},
      courseArrangeName = #{record.coursearrangename,jdbcType=VARCHAR},
      yearNum = #{record.yearnum,jdbcType=VARCHAR},
      semester = #{record.semester,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.jwxt.bean.arrangeCourse.Coursearrangementbaseinfo" >
    update coursearrangementbaseinfo
    <set >
      <if test="arrangepersonname != null" >
        arrangePersonName = #{arrangepersonname,jdbcType=VARCHAR},
      </if>
      <if test="coursearrangetime != null" >
        courseArrangeTime = #{coursearrangetime,jdbcType=TIMESTAMP},
      </if>
      <if test="coursearrangename != null" >
        courseArrangeName = #{coursearrangename,jdbcType=VARCHAR},
      </if>
      <if test="yearnum != null" >
        yearNum = #{yearnum,jdbcType=VARCHAR},
      </if>
      <if test="semester != null" >
        semester = #{semester,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where arrangeBaseInfoId = #{arrangebaseinfoid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.jwxt.bean.arrangeCourse.Coursearrangementbaseinfo" >
    update coursearrangementbaseinfo
    set arrangePersonName = #{arrangepersonname,jdbcType=VARCHAR},
      courseArrangeTime = #{coursearrangetime,jdbcType=TIMESTAMP},
      courseArrangeName = #{coursearrangename,jdbcType=VARCHAR},
      yearNum = #{yearnum,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where arrangeBaseInfoId = #{arrangebaseinfoid,jdbcType=VARCHAR}
  </update>
</mapper>